"""
  day18 复习
  函数式编程
    函数作为参数
      将核心逻辑传入方法体，使该方法的适用性更广，体现了面向对象的开闭原则。
      lambda 表达式:匿名方法,作为参数传递时特别优雅.
      设计思想:
        "封装"
            功能1...
            功能2...
            功能3...
        "继承"
            提取变化点(一个函数处理一个变化的逻辑)
            定义通用函数(形参代表/抽象变化的函数)
        "多态"
            在通用的函数中,通过调用形参,执行实参(变化点).
      内置高阶函数:ListHelper类都包含了(跨语言的编程思想,还可以无限扩展).
                 参照了微软Linq框架思想.
    函数作为返回值
      闭包:语法上讲,外部函数执行完毕后,不会立即释放栈帧,而是等着内部函数执行完毕后,再释放.
          设计上讲,为了让逻辑连续(外部与内部函数逻辑持续).
        def 外部函数():
          变量
          def 内部函数():
             使用外部变量
          return 内部函数

        变量 = 外部函数()
        变量()
      闭包应用:装饰器
"""
# find : 查找列表中符合条件的元素
# a:列表
# b:条件
def fun01(a,b):
  pass

def fun02():
  pass

# 将数据(100)传入方法fun01中
# 将逻辑(fun02)传入方法fun01中
# 目的:让数据与逻辑随意变化,不影响通用的方法(find..).
fun01(100,fun02)
fun01(100,lambda :"返回的数据")










