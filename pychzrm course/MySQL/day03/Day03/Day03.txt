1.外键
	1.创建表设置外键
		create table xxxx(
			xxx xxxx,
			constraint 外键名 foreign key(字段) 
			references 主表(主键)
			on delete cascade|restrict|set null
			on update cascade|restrict|set null
		)
	2.修改表增加外键
		alter table xxx
		add constraint 外键名
		foreign key(字段)
		references 主表(主键)
		on delete cascade|restrict|set null
		on update cascade|restrict|set null
	3.查看外键
		show create table xxxx
	4.删除外键
		alter table xxxx
		drop foreign key 外键名
2.连接查询
	1.交叉连接
		select * from A,B where A.bid=B.id
	2.内连接
		连接两张表,将满足条件的数据筛选出来
		select * from A
		inner join B
		on A.bid = B.id
=======================================================
1.连接查询
	1.外连接
		1.左外连接
			1.作用
				1.左表中所有的数据都会查询出来(即便不满足条件)
				2.将右表中满足关联条件的数据查询出来
				3.关联不上的数据关联字段将以null作为填充
			2.语法
				select 字段 
				from A left join B
				on 关联条件
		2.右外连接
			1.作用
				1.右表中所有的数据都会查询出来
				2.将左表中满足关联条件的数据查询出来
				3.关联不上的数据关联字段将以null作为填充
			2.语法
				select 字段
				from A right join B
				on 关联条件
		3.完整外连接
			1.作用
				将两张表的数据做关联查询,关联得上的则正常显示
				关联不上的,则以null值填充
			2.语法
				select * from 
				A full join B
				on 关联条件
2.子查询
	1.什么是子查询
		将一个查询的结果作为外侧操作的一个条件出现
	2.语法
		select .... from 表名 where 条件=(select ... )
		select .... from (查询)
	练习:
		1.查询考过"齐天大圣"老师所教课程的学员的信息
		2.查询在score表中有成绩的学员的信息
		3.查询"Python基础"课程并且分数在80分以上的
		  学员的姓名和毕业院校
		4.查询和"张三"相同班级以及相同专业的同学的信息
3.E-R模型
	1.什么E-R模型
		Entity - Relationship 模型 (实体-关系模型)
		在数据库设计阶段一定会使用到
		以图形的方式展示数据库中的表以及表关系
	2.概念
		1.实体 - Entity
			表示数据库中的一个表
			图形表示:矩形框
		2.属性
			表示某实体中的某一特性,即表的字段
			图形表示:椭圆形
		3.关系 - Relationship
			表示实体与实体之间的关联关系
			1.一对一关系(1:1)
				A表中的一条记录只能关联到B表中的一条记录上
				B表中的一条记录只能关联到A表中的一条记录上

				在数据库中的实现手段
				在任意的一张表中增加:
					1.外键,并引用自另一张表主键
					2.唯一索引/约束
			2.一对多关系(1:M)
				A表中的一条记录能够关联到B表中的多条记录
				B表中的一条记录只能关联到A表中的一条记录

				在数据库中的实现手段
				在"多"表中增加:
					1.外键,引用"一"表的主键
			3.多对多关系(M:N)
				A表中的一条记录能够关联到B表中的多条记录
				B表中的一条记录能够关联到A表中的多条记录

				在数据库中的实现手段
				靠第三张关联表,来实现多对多
					1.创建第三张表
					2.一个主键,俩外键
						外键分别引用自关联的两张表的主键
4.SQL语句优化
	1.索引:经常select,where,order by 的字段应该建立索引
	2.单条查询语句最后添加 LIMIT 1	, 停止全表扫描
	3.where子句中尽量不使用 != ,否则放弃索引全表扫描
	4.尽量避免null值判断,否则放弃索引全表扫描
	5.尽量避免 or 连接条件,否则放弃索引全表扫描
	6.模糊查询尽量避免使用前置%,否则全表扫描
	7.尽量避免使用in 和 not in,否则全表扫描
	8.尽量避免使用 select * ,使用具体字段代替 *,不要返回用不到的任何字段

select * from A inner join B
on A.bid = B.id


Navicat for MySQL
Power Designer - 数据库建模
Microsoft Visio - ER图